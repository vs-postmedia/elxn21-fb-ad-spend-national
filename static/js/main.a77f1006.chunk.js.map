{"version":3,"sources":["js/helper-functions.js","components/StatBox/StatBox.js","components/SummaryBox/SummaryBox.js","components/TooltipTemplate/tooltip-template.js","components/DrawChart/DrawChart.js","components/DailyCharts/DailyCharts.js","components/AdSpendTracker/AdSpendTracker.js","components/App/App.js","serviceWorker.js","fonts/Shift-Bold.otf","fonts/Shift-BoldItalic.otf","fonts/BentonSansCond-Regular.otf","fonts/BentonSansCond-RegItalic.otf","fonts/BentonSansCond-Bold.otf","fonts/BentonSansCond-BoldItalic.otf","index.js"],"names":["months","helper","numberWithCommas","x","toString","replace","map","num","in_min","in_max","out_min","out_max","getPostmediaMonth","StatBox","props","className","data","party","toLowerCase","total","SummaryBox","stats","date","lastUpdate","split","month","parseInt","day","d","i","formatTime","d3","tooltip","height","width","y","target","__data__","popup","Popup","margin","a","chartRowCount","parseData","chart","dims","node","getBoundingClientRect","window","innerWidth","svg","selectAll","enter","append","attr","style","text","xSetup","values","ySetup","call","xAxis","yAxis","bandwidth","on","handleMouseOver","handleMouseOut","hide","e","xPos","touches","clientX","yPos","clientY","point","html","tooltipTemplate","draw","order","forEach","filter","g","xScale","domain","tickSize","tickFormat","tickPadding","tickValues","length","ticks","select","remove","nice","range","rangeRound","padding","DrawChart","DailyCharts","useEffect","id","AdSpendTracker","state","party_data","party_daily","Axios","get","this","dataUrl","then","resp","setState","last_update","party_total","partyDaily_d3","party_order","Component","collection","key","rollup","v","array","total_spend","entries","group","timestamp","Date","getTime","value","sort","b","App","href","rel","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wYAAMA,EAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,QAczFC,EAbA,CACdC,iBADc,SACGC,GACb,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,MAEzDC,IAJc,SAIVC,EAAKC,EAAQC,EAAQC,EAASC,GACjC,OAAQJ,EAAMC,IAAWG,EAAUD,IAAYD,EAASD,GAAUE,GAEnEE,kBAPc,SAOIT,GACjB,OAAOH,EAAOG,K,gBCMDU,EAVC,SAACC,GAEhB,OACC,sBAAKC,UAAU,OAAf,UACC,mBAAGA,UAAS,kBAAaD,EAAME,KAAKC,MAAMC,eAA1C,oBAAgEjB,EAAOC,iBAAiBY,EAAME,KAAKG,UACnG,mBAAGJ,UAAU,QAAb,SAAsBD,EAAME,KAAKC,YCoBrBG,G,OAzBI,SAACN,GACnB,IAAMO,EAAQP,EAAME,KAEdM,EAAOR,EAAMS,WAAWC,MAAM,KAE9BC,EAAQxB,EAAOW,kBAAkBc,SAASJ,EAAK,IAAM,GACrDK,EAAML,EAAK,GAEjB,OACC,sBAAKP,UAAU,cAAf,UACC,qBAAKA,UAAU,WAAf,SAEEM,EAAMf,KAAI,SAACsB,EAAEC,GACZ,OACC,cAAC,EAAD,CAASb,KAAMY,GAAQC,QAK3B,mBAAGd,UAAU,cAAb,mCAA+CU,EAA/C,YAAwDE,U,uDCpBrDG,G,OAAaC,IAAc,UAelBC,ICXXC,EAAQC,EAAO/B,EAAGgC,EDWPH,EAbf,SAAiBhB,GAChB,IAAMG,EAAQH,EAAKoB,OAAOC,SAASlB,MAC7BG,EAAON,EAAKoB,OAAOC,SAASf,KAQlC,MAPc,qEAEMQ,EAAWR,GAFjB,gDAGerB,EAAOC,iBAAiBiB,GAHvC,yBCETmB,G,OAAQC,eACRC,EACA,GADAA,EAEE,GAFFA,EAGG,GAHHA,EAIC,G,4CAGP,WAAyB1B,GAAzB,uBAAA2B,EAAA,6DACCR,EAAS,IAELS,EAAgB,EAHrB,SAKoBC,EAAU7B,GAL9B,OAKOE,EALP,OAQO4B,EAAQb,IAAU,WAClBc,EAAOD,EAAME,OAAOC,wBAKtBC,OAAOC,WAvBO,MAwBjBP,EAAgB,GAKjBR,EAASW,EAAKX,MAAQQ,EAAiBF,EAAcA,GAG/CU,EAAMN,EAAMO,UAAU,OAC1BnC,KAAKA,GACLoC,QAAQC,OAAO,OACdC,KAAK,SAAS,SAAA1B,GAAC,OAAIA,EAAEX,MAAMC,iBAC3BqC,MAAM,SAJG,UAIUtB,EAJV,OAKTsB,MAAM,QALG,UAKSrB,EAAQM,EAAcA,EAL/B,OAMTa,OAAO,KACNC,KAAK,YAPG,oBAOuBd,EAPvB,aAOuCA,EAPvC,OAURa,OAAO,QACTG,MAAK,SAAA5B,GAAC,OAAIA,EAAEX,SACZqC,KAAK,SAAS,SAAA1B,GAAC,gBAAOA,EAAEX,MAAMC,cAAf,kBAIjBf,EAAIsD,EAAOzC,EAAK,GAAG0C,QACnBvB,EAAIwB,EAAO3C,EAAK,GAAG0C,QAChBR,EAAIG,OAAO,KACTO,KAAKC,GACPX,EAAIG,OAAO,KACTO,KAAKE,GAGPZ,EAAIG,OAAO,KACTF,UAAU,QACVnC,MAAK,SAAAY,GAAC,OAAIA,EAAE8B,UACZN,QAAQC,OAAO,QACdC,KAAK,KAAK,SAAA1B,GAAC,OAAIzB,EAAEyB,EAAEN,SACnBgC,KAAK,KAAK,SAAA1B,GAAC,OAAIO,EAAEP,EAAET,UACnBmC,KAAK,UAAU,SAAA1B,GAAC,OAAIO,EAAE,GAAKA,EAAEP,EAAET,UAC/BmC,KAAK,QAASnD,EAAE4D,aAChBC,GAAG,uBAAwBC,GAC3BD,GAAG,oBAAqBE,GAxD/B,6C,sBA2DA,IAAMA,EAAiB,WACtB5B,EAAM6B,QAEDF,EAAkB,SAACG,GAIxB,IAAMC,EAAQD,EAAEE,QAAWF,EAAEE,QAAQ,GAAGC,QAAUH,EAAEG,QAC9CC,EAAQJ,EAAEE,QAAWF,EAAEE,QAAQ,GAAGG,QAAUL,EAAEK,QAEpDnC,EAAMoC,MAAML,EAAMG,GAClBlC,EAAMqC,KAAKC,EAAgBR,IAC3B9B,EAAMuC,QAGDlC,EAAY,SAAC7B,GAClB,IAAME,EAAOF,EAAME,KACb8D,EAAQhE,EAAMgE,MASpB,OAPA9D,EAAK+D,SAAQ,SAAA9D,GACZA,EAAMyC,OAAOqB,SAAQ,SAAAnD,GACpBA,EAAEN,KAAOS,IAAa,WAAbA,CAAyBH,EAAEN,YAKhC,GAAN,mBACIN,EAAKgE,QAAO,SAAApD,GAAC,OAAIA,EAAEX,QAAU6D,EAAM,OADvC,YAEI9D,EAAKgE,QAAO,SAAApD,GAAC,OAAIA,EAAEX,QAAU6D,EAAM,OAFvC,YAGI9D,EAAKgE,QAAO,SAAApD,GAAC,OAAIA,EAAEX,QAAU6D,EAAM,OAHvC,YAII9D,EAAKgE,QAAO,SAAApD,GAAC,OAAIA,EAAEX,QAAU6D,EAAM,OAJvC,YAKI9D,EAAKgE,QAAO,SAAApD,GAAC,OAAIA,EAAEX,QAAU6D,EAAM,SAKlCjB,EAAQ,SAAAoB,GACb,IAAMC,EAAS/E,EAAEgF,SACjBF,EAAE3B,KAAK,YAAP,uBAAoCrB,EAASO,EAA7C,MACEc,KAAK,QAAS,eACdM,KAAK7B,IAAc5B,GAClBiF,SAAS,GACTC,WAAWtD,IAAc,WACzBuD,YAAY,CAAC,KACbC,WAAW,CAACL,EAAO,GAAIA,EAAOA,EAAOM,OAAS,OAI5C1B,EAAQ,SAAAmB,GACbA,EAAE3B,KAAK,QAAS,eACdM,KAAK7B,IAAYI,GAChBsD,MAxHW,GAyHXL,UAAUlD,GACVmD,YAAW,SAAAzD,GAAC,gBAAO3B,EAAOC,iBAAiB0B,EAAI,UAEhDgC,MAAK,SAAAqB,GAAC,OAAIA,EAAES,OAAO,WAAWC,aAG3BhC,EAAS,SAAC3C,GACf,OAAOe,MACLoD,OAAO,CAAC,EAAGpD,IAAOf,GAAM,SAAAY,GAAC,OAAIF,SAASE,EAAET,YAAUyE,OAClDC,MAAM,CAAC5D,EAASO,EAAeA,KAG5BiB,EAAS,SAACzC,GACf,OAAOe,MACL+D,WAAW,CAAC,EAAG5D,GAAQ,IAAK6D,QAAQ,IACpCZ,OAAOnE,EAAKV,KAAI,SAAAsB,GAAC,OAAIA,EAAEN,UAGX0E,E,4CC/HAC,G,OAjBK,SAACnF,GAMpB,OAJAoF,qBAAU,WACTF,EAAUlF,MAIV,sBAAKC,UAAU,eAAf,UACC,0DAA4B,sBAAMA,UAAU,WAAhB,8BAC5B,qBAAKoF,GAAG,gB,yBCHUC,E,4MACpBC,MAAQ,CACPC,WAAY,GACZC,YAAa,I,uDAGd,WAAqB,IAAD,OACnBC,IAAMC,IAAIC,KAAK5F,MAAM6F,SACnBC,MAAK,SAAAC,GACL,EAAKC,SAAS,CACbC,YAAaF,EAAK7F,KAAKO,WACvB+E,WAAYO,EAAK7F,KAAKgG,YACtBT,YAAaU,EAAcJ,EAAK7F,KAAKuF,aACrCW,YAAaL,EAAK7F,KAAKgG,YAAY1G,KAAI,SAAAsB,GAAC,OAAIA,EAAEX,gB,oBAKlD,WACC,OAAIyF,KAAKL,MAAMC,WAAWd,OAAS,EAEjC,eAAC,WAAD,WACC,cAAC,EAAD,CAAYzE,UAAU,cACrBC,KAAM0F,KAAKL,MAAMC,WACjB/E,WAAYmF,KAAKL,MAAMU,cAGvB,cAAC,EAAD,CACA/F,KAAM0F,KAAKL,MAAME,YACjBzB,MAAO4B,KAAKL,MAAMa,iBAMpB,cAAC,WAAD,Q,GAnCwCC,aA0C5C,SAASF,EAAcjG,GACtB,OAAKA,EAEEoG,MACLC,KAAI,SAAAzF,GAAC,OAAIA,EAAC,SACVyF,KAAI,SAAAzF,GAAC,OAAIA,EAAEN,QACXgG,QAAO,SAAAC,GACP,MAAO,CACNpG,MAAOqG,IAAUD,GAAG,SAAA3F,GAAC,OAAIA,EAAE6F,mBAG5BC,QAAQ1G,GACRV,KAAI,SAAAqH,GACJ,MAAO,CACN1G,MAAO0G,EAAMN,IACb3D,OAAQiE,EAAMjE,OAAOpD,KAAI,SAAAsB,GACxB,MAAO,CACNN,KAAMM,EAAEyF,IACRO,UAAW,IAAIC,KAAKjG,EAAEyF,KAAKS,UAC3B3G,MAAOS,EAAEmG,MAAM5G,UAIhB6G,MAAK,SAACvF,EAAGwF,GAAJ,OAAUxF,EAAEmF,UAAYK,EAAEL,iBAtBjB,K,OC/BJM,MAhBf,WACC,OACG,sBAAKnH,UAAU,MAAf,UACC,uFAEA,cAAC,EAAD,CACC4F,QARa,uFAWd,iCACC,oBAAG5F,UAAU,SAAb,qBAA8B,mBAAGoH,KAAK,wCAAwC/F,OAAO,SAASgG,IAAI,sBAApE,iCAA9B,6LCJcC,QACW,cAA7BrF,OAAOsF,SAASC,UAEe,UAA7BvF,OAAOsF,SAASC,UAEhBvF,OAAOsF,SAASC,SAASC,MACvB,2D,OClBS,ICAA,ICAA,ICAA,ICAA,ICAA,ICmBfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,QP8G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnC,MAAK,SAAAoC,GACjCA,EAAaC,kB","file":"static/js/main.a77f1006.chunk.js","sourcesContent":["const months = ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'June', 'July', 'Aug.', 'Sept.', 'Oct.', 'Nov.', 'Dec.']\nconst helper = {\n\tnumberWithCommas(x) {\n\t    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\t},\n\tmap(num, in_min, in_max, out_min, out_max) {\n\t\treturn (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n\t},\n\tgetPostmediaMonth(x) {\n\t\treturn months[x];\n\t}\n\t\n};\n\nexport default helper;","import React from 'react';\nimport helper from '../../js/helper-functions';\nimport './StatBox.css';\n\n\nconst StatBox = (props) => {\n\n\treturn (\n\t\t<div className=\"stat\">\n\t\t\t<p className={`big-num ${props.data.party.toLowerCase()}`}>{`$${helper.numberWithCommas(props.data.total)}`}</p>\n\t\t\t<p className=\"label\">{props.data.party}</p>\n\t\t</div>\n\t);\n}\t\n\nexport default StatBox;","import React from 'react';\nimport StatBox from '../StatBox/StatBox';\nimport helper from '../../js/helper-functions';\nimport './SummaryBox.css';\n\nconst SummaryBox = (props) => {\n\tconst stats = props.data\n\n\tconst date = props.lastUpdate.split('-');\n\t// not zero-based. ugh.\n\tconst month = helper.getPostmediaMonth(parseInt(date[1]) - 1);\n\tconst day = date[2];\n\n\treturn (\n\t\t<div className=\"summary-box\">\n\t\t\t<div className=\"stat-box\">\n\t\t\t\t{\n\t\t\t\t\tstats.map((d,i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<StatBox data={d} key={i}></StatBox>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<p className=\"last-update\">{`From Aug. 15 to ${month} ${day}`}</p>\n\t\t</div>\n\t);\n}\n\n\nexport default SummaryBox;\n\n","import * as d3 from 'd3-time-format';\nimport helper from '../../js/helper-functions';\nimport './tooltip-template.css';\n\nconst formatTime = d3.timeFormat('%B %d');\n\nfunction tooltip(data) {\n\tconst total = data.target.__data__.total;\n\tconst date = data.target.__data__.date;\n\tconst template = `\n\t\t<div class=\"tooltip-content\">\n\t\t\t<p class=\"date\">${formatTime(date)}</p>\n\t\t\t<p class=\"total-amount\">$${helper.numberWithCommas(total)}</p>\n\t\t</div>\n\t`;\n\n\treturn template;\n};\n\nexport default tooltip;\n\n","import * as d3 from 'd3';\nimport Popup from '@flourish/popup';\nimport helper from '../../js/helper-functions';\nimport tooltipTemplate from '../TooltipTemplate/tooltip-template';\nimport './DrawChart.css';\n\n\n// THE GOOD STUFF\nlet height, width, x, y;\nconst yTicks = 2;\nconst breakpoint = 400;\nconst popup = Popup();\nconst margin = {\n\ttop: 15,\n\tright: 15,\n\tbottom: 40,\n\tleft: 25\n};\n\nasync function DrawChart(props) {\n\theight = 150;\n\t// let chartCount = props.data.length;\n\tlet chartRowCount = 2;\n\t// convert dates into something useful\n\tconst data = await parseData(props);\n\n\t// get container element & determine dimensions\n\tconst chart = d3.select('#charts');\n\tconst dims = chart.node().getBoundingClientRect();\n\n\t// height = (dims.height - margin.bottom - margin.top) / chartRowCount;\n\n\t// stacked on mobile\n\tif (window.innerWidth > breakpoint) {\n\t\tchartRowCount = 3;\n\t\t// height = dims.height / 2;\n\t\t// width = dims.width - margin.left;\n\t\t// width = (dims.width / chartRowCount) - margin.left - margin.right;\n\t}\n\twidth = (dims.width / chartRowCount) - margin.left - margin.right;\n\n\t// setup our svg\n\tconst svg = chart.selectAll('svg')\n\t\t.data(data)\n\t\t.enter().append('svg')\n\t\t\t.attr('class', d => d.party.toLowerCase())\n\t\t\t.style('height', `${height}px`)\n\t\t\t.style('width', `${width + margin.left + margin.right}px`)\n\t\t\t.append('g')\n\t\t\t\t.attr('transform', `translate(${margin.left}, ${margin.top})`);\n\t\t\t\n\t// label charts\n\tsvg.append('text')\n\t\t.text(d => d.party)\n\t\t.attr('class', d => `${d.party.toLowerCase()} label-text`);\n\n\n    // Add axes\n\tx = xSetup(data[0].values);\n\ty = ySetup(data[0].values);\n    svg.append('g')\n    \t.call(xAxis);\n    svg.append('g')\n    \t.call(yAxis);\n\n    // draw the bars\n    svg.append('g')\n    \t.selectAll('rect')\n    \t.data(d => d.values)\n    \t.enter().append('rect')\n    \t\t.attr('x', d => x(d.date))\n    \t\t.attr('y', d => y(d.total))\n    \t\t.attr('height', d => y(0) - y(d.total))\n    \t\t.attr('width', x.bandwidth())\n    \t\t.on('mouseover touchstart', handleMouseOver)\n    \t\t.on('mouseout touchend', handleMouseOut);\n}\n\nconst handleMouseOut = () => {\n\tpopup.hide();\n}\nconst handleMouseOver = (e) => {\n\t// e.preventDefault();\n\t// e.stopPropagation();\n\n\tconst xPos = (e.touches) ? e.touches[0].clientX : e.clientX;\n\tconst yPos = (e.touches) ? e.touches[0].clientY : e.clientY;\n\n\tpopup.point(xPos, yPos);\n\tpopup.html(tooltipTemplate(e));\n\tpopup.draw();\n}\n\nconst parseData = (props) => {\n\tconst data = props.data;\n\tconst order = props.order;\n\n\tdata.forEach(party => {\n\t\tparty.values.forEach(d => {\n\t\t\td.date = d3.timeParse('%Y-%m-%d')(d.date);\n\t\t});\n\t});\n\n\t// sort so it matches the order in the big numbers section\n\treturn [\n\t\t...data.filter(d => d.party === order[0]),\n\t\t...data.filter(d => d.party === order[1]),\n\t\t...data.filter(d => d.party === order[2]),\n\t\t...data.filter(d => d.party === order[3]),\n\t\t...data.filter(d => d.party === order[4])\n\t];\n};\n\n\nconst xAxis = g => {\n\tconst xScale = x.domain();\n\tg.attr('transform', `translate(0, ${height - margin.bottom})`)\n\t\t.attr('class', 'x-axis axis')\n\t\t.call(d3.axisBottom(x)\n\t\t\t.tickSize(0)\n\t\t\t.tickFormat(d3.timeFormat('%b. %d'))\n\t\t\t.tickPadding([10])\n\t\t\t.tickValues([xScale[0], xScale[xScale.length - 1]])\n\t\t)\n};\n\nconst yAxis = g => {\n\tg.attr('class', 'y-axis axis')\n\t\t.call(d3.axisLeft(y)\n\t\t\t.ticks(yTicks)\n\t\t\t.tickSize(-width)\n\t\t\t.tickFormat(d => `${helper.numberWithCommas(d / 1000)}`)\n\t\t)\n\t\t.call(g => g.select('.domain').remove()); // removed the line\n};\n\nconst ySetup = (data) => {\n\treturn d3.scaleLinear()\n\t\t.domain([0, d3.max(data, d => parseInt(d.total))]).nice()\n\t\t.range([height - margin.bottom, margin.top])\n};\n\nconst xSetup = (data) => {\n\treturn d3.scaleBand()\n\t\t.rangeRound([0, width], 0.5).padding(0.1)\n\t\t.domain(data.map(d => d.date))\n};\n\nexport default DrawChart;","import React, { useEffect } from 'react';\nimport DrawChart from '../DrawChart/DrawChart';\nimport './DailyCharts.css';\n\nconst DailyCharts = (props) => {\n\t// this is called once the dom element has rendered\n\tuseEffect(()=> {\n\t\tDrawChart(props);\n\t});\n\n\treturn (\n\t\t<div className=\"daily-charts\">\n\t\t\t<h2>Daily Facebook ad spend <span className=\"h2-small\">($000’s)</span></h2>\n\t\t\t<div id=\"charts\"></div>\n\t\t</div>\n\t);\n}\n\n\n\n\nexport default DailyCharts;\n\n","import Axios from 'axios';\nimport React, { Component, Fragment } from 'react';\nimport SummaryBox from '../SummaryBox/SummaryBox';\nimport DailyCharts from '../DailyCharts/DailyCharts';\nimport './AdSpendTracker.css';\n\nimport * as collection from 'd3-collection';\nimport * as array from 'd3-array';\n\n\nexport default class AdSpendTracker extends Component {\n\tstate = {\n\t\tparty_data: [],\n\t\tparty_daily: []\n\t}\n\n\tcomponentDidMount() {\n\t\tAxios.get(this.props.dataUrl)\n\t\t\t.then(resp => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tlast_update: resp.data.lastUpdate,\n\t\t\t\t\tparty_data: resp.data.party_total,\n\t\t\t\t\tparty_daily: partyDaily_d3(resp.data.party_daily),\n\t\t\t\t\tparty_order: resp.data.party_total.map(d => d.party)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.party_data.length > 0) {\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<SummaryBox className=\"summary-box\"\n\t\t\t\t\t\tdata={this.state.party_data}\n\t\t\t\t\t\tlastUpdate={this.state.last_update}>\n\t\t\t\t\t</SummaryBox>\n\n\t\t\t\t\t{<DailyCharts\n\t\t\t\t\t\tdata={this.state.party_daily}\n\t\t\t\t\t\torder={this.state.party_order}>\n\t\t\t\t\t</DailyCharts>}\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Fragment />\n\t\t\t)\n\t\t}\n\t}\n}\n\n\nfunction partyDaily_d3(data) {\n\tif (!data) return null;\n\n\treturn collection.nest()\n\t\t.key(d => d['party'])\n\t\t.key(d => d.date)\n\t\t.rollup(v => {\n\t\t\treturn {\n\t\t\t\ttotal: array.sum(v, d => d.total_spend)\n\t\t\t}\n\t\t})\n\t\t.entries(data)\n\t\t.map(group => {\n\t\t\treturn {\n\t\t\t\tparty: group.key,\n\t\t\t\tvalues: group.values.map(d => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdate: d.key,\n\t\t\t\t\t\ttimestamp: new Date(d.key).getTime(),\n\t\t\t\t\t\ttotal: d.value.total\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// sort by date, ascending\n\t\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t\t}\n\t\t});\n}\n\n\n\n\n","import React from 'react';\nimport AdSpendTracker from '../AdSpendTracker/AdSpendTracker';\nimport './App.css';\n\nconst adSpendUrl = 'https://vs-postmedia-data.sfo2.digitaloceanspaces.com/elxn/elxn21/fb-ad-spend.json';\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<h2>Election ad spending on Facebook and its platforms...</h2>\n\t  \t\t\n\t  \t\t<AdSpendTracker\t\n\t  \t\t\tdataUrl={adSpendUrl}>\n\t  \t\t</AdSpendTracker>\n\n\t  \t\t<footer>\n\t  \t\t\t<p className=\"source\">Source: <a href=\"https://www.facebook.com/ads/library/\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook Ad Library</a> • Data includes spending by the official Facebook pages for each party and party leaders.  Data includes ads placed on Facebook, Instagram, WhatsApp, Messenger and Oculus.</p>\n\t  \t\t</footer>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n\t\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/Shift-Bold.8c454d7e.otf\";","export default __webpack_public_path__ + \"static/media/Shift-BoldItalic.144e2c1f.otf\";","export default __webpack_public_path__ + \"static/media/BentonSansCond-Regular.4421f875.otf\";","export default __webpack_public_path__ + \"static/media/BentonSansCond-RegItalic.06edc58b.otf\";","export default __webpack_public_path__ + \"static/media/BentonSansCond-Bold.87a66dcd.otf\";","export default __webpack_public_path__ + \"static/media/BentonSansCond-BoldItalic.539670da.otf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n// FONTS\nimport './fonts/Shift-Bold.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/BentonSansCond-Regular.otf';\nimport './fonts/BentonSansCond-RegItalic.otf';\nimport './fonts/BentonSansCond-Bold.otf';\nimport './fonts/BentonSansCond-BoldItalic.otf';\n\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}